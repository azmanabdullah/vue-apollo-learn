"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A datetime and timezone string in ISO 8601 format `Y-m-dTH:i:sO`, e.g. `2020-04-20T13:53:12+02:00`."
scalar DateTimeTz @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTimeTz")

#import users/*.graphql
#import books/book.graphql


type Query {
    books: [Book!]! @paginate(defaultCount: 3) @middleware(checks: ["auth:api"])
    book(id: ID! @eq): Book @find
    users: [User!]! @paginate(defaultCount: 3)
    user(id: ID! @eq): User @find
}

extend type Query {
    me: User @auth(guard: "api")
}

type Mutation {
    login(
        email: String! @rules(apply: ["email"])
        password: String!
    ): AuthResponse @field(resolver: "Authenticate@login")
    logout: String @field(resolver: "Authenticate@logout") @middleware(checks: ["auth:api"])
}

type AuthResponse {
    id: ID,
    name: String,
    token: String
}




